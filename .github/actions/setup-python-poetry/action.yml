name: 'Setup Python and Poetry'
description: 'Sets up Python, Poetry, and caches for both'

inputs:
  python-version:
    description: 'Python version to use'
    required: false
    default: '3.13'
  poetry-version:
    description: 'Poetry version to use'
    required: false
    default: latest

runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
        cache: "pip"

    - name: Cache Poetry binary
      id: cache-poetry
      uses: actions/cache@v4
      with:
        path: ~/.local
        key: poetry-binary-${{ runner.os }}-${{ inputs.poetry-version }}

    - name: Install Poetry
      if: steps.cache-poetry.outputs.cache-hit != 'true'
      uses: snok/install-poetry@v1
      with:
        version: ${{ inputs.poetry-version }}
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Verify Poetry Installation
      if: steps.cache-poetry.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "Poetry version: $(poetry --version)"
        poetry --version

    - name: Cache virtualenv
      id: cache-venv
      uses: actions/cache@v4
      with:
        path: |
          .venv
          ~/.cache/pypoetry
        key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      if: steps.cache-venv.outputs.cache-hit != 'true'
      shell: bash
      run: poetry install --no-interaction --no-root
